{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "adflab-adf300"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/S3 to Blob Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "S3 to Azure Blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"N-Number": "N-Number",
									"Serial Number": "Serial Number",
									"MFR MDL Code": "MFR MDL Code",
									"Eng MFR Code": "Eng MFR Code",
									"Year MFR": "Year MFR",
									"Type Registrant": "Type Registrant",
									"Name": "Name",
									"Street 1": "Street 1",
									"Street2": "Street2",
									"City": "City",
									"State": "State",
									"ZIP": "ZIP",
									"Region": "Region",
									"County ": "County ",
									"Country": "Country",
									"Last Activity Date": "Last Activity Date",
									"Cert Issue Date": "Cert Issue Date",
									"Certification Requested ": "Certification Requested ",
									"Type Aircraft": "Type Aircraft",
									"Type Engine": "Type Engine",
									"Status Code": "Status Code",
									"Mode S Code": "Mode S Code",
									"Fractional  Ownership": "Fractional  Ownership",
									"Airworthiness Date": "Airworthiness Date",
									"Other Name 1": "Other Name 1",
									"Other Name 2": "Other Name 2",
									"Other Name 3": "Other Name 3",
									"Other Name 4": "Other Name 4",
									"Other Name 5": "Other Name 5",
									"Expiration Date": "Expiration Date",
									"Unique ID": "Unique ID",
									"Kit MFR Code": "Kit MFR Code",
									"Kit Model": "Kit Model",
									"Mose S Code Hex": "Mose S Code Hex"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "S3_MasterFAAFile",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Master_FAAFile",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "SendSuccessEmail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "S3 to Azure Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://pragmaticworks.com",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"dataFactoryName": "@{pipeline().DataFactory}",
								"successtype": "Succeeded",
								"message": "@{activity('S3 to Azure Blob').output.dataWritten}",
								"pipelineName": "@{pipeline().Pipeline}",
								"recipient": "@{pipeline().parameters.recipient}"
							}
						}
					},
					{
						"name": "SendFailureEmail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "S3 to Azure Blob",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://pragmaticworks.com",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"dataFactoryName": "@{pipeline().DataFactory}",
								"successtype": "Failed",
								"message": "@{activity('S3 to Azure Blob').error.message}",
								"pipelineName": "@{pipeline().Pipeline}",
								"recipient": "@{pipeline().parameters.recipient}"
							}
						}
					},
					{
						"name": "Exec Weather to Blob copy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SendSuccessEmail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Weather to Blob Copy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"parameters": {
					"recipient": {
						"type": "string",
						"defaultValue": "pieter.gruyters@randomforest.se"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Weather to Blob Copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weather to Blob Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_fu0",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "input//201612-WeatherData.txt"
							}
						],
						"typeProperties": {
							"source": {
								"type": "HttpSource",
								"httpRequestTimeout": "00:01:40"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSetting",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSetting",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_fu0",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_fu0",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_fu0')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_fu0')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_fu0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzStorage_Staging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "201612-WeatherData.txt",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "_id",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "dateint",
						"type": "String"
					},
					{
						"name": "airport",
						"type": "String"
					},
					{
						"name": "temp",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_fu0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HTTP_Weather",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "HttpFile",
				"structure": [
					{
						"name": "_id",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "dateint",
						"type": "Int64"
					},
					{
						"name": "airport",
						"type": "String"
					},
					{
						"name": "temp",
						"type": "Int64"
					}
				],
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "arrayOfObjects",
						"jsonPathDefinition": {
							"_id": "$.['_id']",
							"date": "$.['date']",
							"dateint": "$.['dateint']",
							"airport": "$.['airport']",
							"temp": "$.['temp']"
						}
					},
					"relativeUrl": "",
					"requestMethod": "GET",
					"additionalHeaders": "x-apikey: 5a31643dcb25c1076c7cd9ab\nContent-Type: application/json"
				}
			},
			"dependsOn": []
		}
	]
}